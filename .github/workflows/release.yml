name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Ex: v1.0.0
  pull_request:

jobs:
  validate-commits:
    if: github.event_name == 'pull_request'
    name: Valida√ß√£o de Commits
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Verificar mensagens de commit
        run: |
          commits=$(git log origin/${{ github.base_ref }}..HEAD --pretty=format:"%s")
          echo "$commits" | while read line; do
            if ! echo "$line" | grep -Eq "^(feat|fix|chore|docs|style|refactor|perf|test)(\(.+\))?: .+"; then
              echo "::error file=COMMIT_MESSAGE::‚ùå Commit inv√°lido: '$line'"
              echo ""
              echo "üîß Use o padr√£o: <tipo>(escopo opcional): descri√ß√£o breve"
              echo "Exemplos v√°lidos:"
              echo " - feat(login): adiciona autentica√ß√£o"
              echo " - fix(api): corrige retorno de erro 500"
              exit 1
            fi
          done
          echo "‚úÖ Todos os commits est√£o v√°lidos."

  generate-changelog:
    if: startsWith(github.ref, 'refs/tags/')
    name: Gerar CHANGELOG
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Access to full history

      - name: Gerar CHANGELOG.md
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          NEW_TAG=$(git describe --tags)
          echo "# Changelog - $NEW_TAG" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          git log "$PREV_TAG..$NEW_TAG" --pretty=format:"- %s" >> CHANGELOG.md
          cat CHANGELOG.md

      - name: Commitar CHANGELOG.md
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs(changelog): Atualiza CHANGELOG para $NEW_TAG" || echo "Sem altera√ß√µes."
          git push origin HEAD:${{ github.ref_name }}

  release:
    if: startsWith(github.ref, 'refs/tags/')
    name: Criar Release no GitHub
    runs-on: ubuntu-latest
    needs: generate-changelog

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4

      - name: Criar release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md
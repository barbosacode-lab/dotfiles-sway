name: release

on:
  push:
    tags:
      - 'v*.*.*'  # Executa o release apenas com push de tags versionadas (ex: v1.0.0)
  pull_request:
    branches:
      - main  # Valida commits nos PRs direcionados para a branch main

jobs:
  validate-commits:
    name: Valida√ß√£o de Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # S√≥ roda para PRs

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          fetch-tags: true

      - name: Buscar branch base (main)
        run: git fetch origin main

      - name: Verificar mensagens de commit
        run: |
          commits=$(git log origin/main..HEAD --pretty=format:"%s")
          echo "$commits" | while read line; do
            if ! echo "$line" | grep -Eq "^(feat|fix|chore|docs|style|refactor|perf|test)(\(.+\))?: .+"; then
              echo "::error file=COMMIT_MESSAGE::‚ùå Commit inv√°lido: '$line'"
              echo ""
              echo "üîß Use o padr√£o: <tipo>(escopo opcional): descri√ß√£o breve"
              echo "Exemplos v√°lidos:"
              echo " - feat(login): adiciona autentica√ß√£o"
              echo " - fix(api): corrige retorno de erro 500"
              exit 1
            fi
          done
          echo "‚úÖ Todos os commits est√£o v√°lidos."

  release:
    name: Gerar Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Configurar Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Instalar Conventional Changelog CLI
        run: npm install -g conventional-changelog-cli

      - name: Gerar changelog
        run: conventional-changelog -p angular -i CHANGELOG.md -s

      - name: Commit do changelog
        run: |
          git add CHANGELOG.md
          git commit -m "docs(changelog): atualiza changelog para ${{ github.ref_name }}" || echo "Sem altera√ß√µes no changelog"
          git push origin HEAD:${{ github.ref_name }}

      - name: Criar release no GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: CHANGELOG.md

name: Continuous Integration

on:
  push:
    tags:
      - 'v*.*.*'  # Executa o release apenas com push de tags versionadas (ex: v1.0.0)
  pull_request:
    branches:
      - main  # Valida commits nos PRs direcionados para a branch main

jobs:
  validate-commits:
    name: Valida√ß√£o de Commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'  # S√≥ roda para PRs

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          fetch-tags: true

      - name: Buscar o hist√≥rico completo de todas as branches
        run: git fetch --all

      - name: Verificar mensagens de commit
        run: |
          commits=$(git log origin/main..${{ github.head_ref }} --pretty=format:"%s")
          echo "$commits" | while read line; do
            if ! echo "$line" | grep -Eq "^(feat|fix|chore|docs|style|refactor|perf|test)(\(.+\))?: .+"; then
              echo "::error file=COMMIT_MESSAGE::‚ùå Commit inv√°lido: '$line'"
              echo ""
              echo "üîß Use o padr√£o: <tipo>(escopo opcional): descri√ß√£o breve"
              echo "Exemplos v√°lidos:"
              echo " - feat(login): adiciona autentica√ß√£o"
              echo " - fix(api): corrige retorno de erro 500"
              exit 1
            fi
          done
          echo "‚úÖ Todos os commits est√£o v√°lidos."

  changelog:
    name: Gerar Changelog
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Verificar c√≥digo
        uses: actions/checkout@v2
        
      - name: Configurar Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
      
      - name: Instalar auto-changelog
        run: | 
          npm install -g auto-changelog 

      - name: Exibir o SHA anterior
        run: |
          if [ -z "${{ github.event.before }}" ]; then
            echo "SHA anterior n√£o dispon√≠vel"
          else
            echo "SHA anterior: ${{ github.event.before }}"
          fi        
      - name: Gerar Changelog
        run: |
          npx auto-changelog --starting-version ${{ github.event.before }} --commit-limit false
          # Usa o auto-changelog para gerar o changelog. A vari√°vel `github.event.before` √© o SHA do commit anterior √† tag,
          # portanto, ele pega as altera√ß√µes realizadas desde a √∫ltima tag para gerar o changelog.
        
      - name: Adicionar e Commitar o changelog
        run: |
          git add CHANGELOG.md  
          git commit -m "chore: gerar changelog para v${{ github.ref_name }}"
          git push origin HEAD:chore/changelog-${{ github.ref_name }}
        
      - name: Criar Pull Request de Changelog
        uses: peter-evans/create-pull-request@v3
        with:
          title: "Gerar changelog para v${{ github.ref_name }}"
          body: "Este pull request cont√©m o changelog gerado automaticamente para a vers√£o ${github.ref_name}."
          base: test/conventional-commits  # A branch de base √© configurada para a branch de teste em vez da main, para evitar afetar diretamente a principal.
          branch: chore/changelog-${{ github.ref_name }}  # A branch de origem do PR √© a branch onde o changelog foi gerado e commitado.